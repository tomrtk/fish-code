[tool.poetry]
name = "core"
version = "0.1.2"
description = ""
authors = ["Your Name <you@example.com>"]

[tool.poetry.dependencies]
python = "^3.7"
SQLAlchemy = "^1.4"
fastapi = {extras = ["all"], version = "^0.63.0"}
uvicorn = {extras = ["standard"], version = "^0.13.4"}
async-exit-stack = "^1.0.1"
async_generator = "^1.10"
pydantic = "^1.8.1"
pre-commit = "^2.10.1"
numpy = "^1.20.1"
Pillow = "^8.1.2"
opencv-python = "^4.5.1"

[tool.poetry.dev-dependencies]
black = "^20.8b1"
mypy = "^0.800"
pylint = "^2.6.0"
pytest = "^6.2.2"
coverage = {extras = ["toml"], version = "^5.4"}
pydocstyle = "^5.1.1"
requests = "^2.25.1"
pytest-cov = "^2.11.1"
pre-commit = "^2.10.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
line_length = 80
multi_line_output = 3
src_paths = ["core", "tests"]

[tool.black]
line-length = 80
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
/(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \.pytest_cache
    | \.ipynb_checkpoints
    | __pycache__
    | _build
    | buck-out
    | build
    | dist
    | venv
    | node_modules
    | README.md
)/
'''
verbose = true

[tool.coverage.run]
source = [
    "core",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
filterwarnings = [
    'ignore:the imp module is deprecated:DeprecationWarning',
    'ignore:"@coroutine" decorator is deprecated:DeprecationWarning'
]
