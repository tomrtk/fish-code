---
name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    paths:
      - ".github/**"
      - "setup.cfg"
      - "src/**"
      - "tests/**"
      - "!src/ui/package.json"
      - "!src/ui/package-lock.json"
      - "!src/ui/static/**"

jobs:
  tests:
    name: Python ${{ matrix.python-version }} - ${{ matrix.tests }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.8, 3.9]
        tests: [integration, unit]
    env:
      COVERAGE_FILE: ${{ github.workspace }}/.coverage.${{ matrix.python-version }}-${{ matrix.tests }}
    steps:
      - uses: actions/checkout@v2
      - name: Create LFS file list
        run: |
          git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          # The cache of lfs should be the same on all jobs. Not sure
          # what happens when an update has occured and every job tries
          # to upload a new version.
          # key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1
          key: lfs-${{ hashFiles('.lfs-assets-id') }}-v1
      - name: Git LFS Pull
        run: git lfs pull
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Base Dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --upgrade tox
      - name: Run ${{ matrix.tests }} Tests
        run: |
          tox -e ${{ matrix.tests }}
      - uses: actions/upload-artifact@v2
        if: ${{ matrix.python-version == 3.9 &&  matrix.os == 'ubuntu-latest' }}
        with:
          name: coverage-${{ matrix.tests }}
          path: ${{ env.COVERAGE_FILE }}.*

  upload-to-codecov:
    name: Upload Coverage to Codecov
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Generate Coverage Report (XML)
        run: |
          pip install --upgrade coverage[toml] covdefaults
          coverage combine coverage-*
          coverage xml
      - name: Upload Coverage Report
        uses: codecov/codecov-action@v2.1.0
        with:
          fail_ci_if_error: true
